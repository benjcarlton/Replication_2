---
title: "Second Replication"
author: "Ben Carlton"
date: "4/16/2021"
output:
  pdf_document: default
  html_document: default
---
 
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(haven)
library(stargazer)
library(ggplot2)


Abadie <- read.csv("https://raw.githubusercontent.com/benjcarlton/Replication_2/main/Data/rep2_master.csv")

agesq <- Abadie$age^2
agecube <- Abadie$age^3
educsq <- Abadie$educ*Abadie$educ
educcube <- Abadie$educ*Abadie$educ*Abadie$educ
u74 = case_when(Abadie$re74 == 0 ~ 1, TRUE ~ 0)
u75 = case_when(Abadie$re75 == 0 ~ 1, TRUE ~ 0)
detail1 <- Abadie$educ*Abadie$re74
re74sq <- Abadie$re74^2
re75sq <- Abadie$re75^2
detail2 <- Abadie$u74*Abadie$hisp

age1 <- Abadie$age + agesq + agecube
educ1 <-Abadie$educ + educsq + educcube
```
#1

## A

```{r}
### Logit Model
logit <- glm(treat ~ age + agesq + agecube + educ + educsq + educcube +
                   marr + nodegree + black + hisp + re74 + re75 + u74 +
                   u75 + detail1, family = binomial(link = "logit"), 
                 data = Abadie)

OLS <- lm(treat ~ age + agesq + educ + educsq + 
                   marr + nodegree + black + hisp + re74 + re75 + u74 +
                   u75 + detail1, 
                 data = Abadie)
```


```{r pressure, echo=FALSE}
stargazer(OLS, logit,
  title="OLS",
  notes.label="Significance Levels",
  type = "text"
  )
```

## B
```{r}
Abadielogitscore <- Abadie %>% 
  mutate(pscore = logit$fitted.values)

pcontrol1 <- Abadielogitscore %>% 
  filter(treat == 0) %>% 
  pull(pscore) %>% 
  mean()

ptreated1 <- Abadielogitscore %>% 
  filter(treat == 1) %>% 
  pull(pscore) %>% 
  mean()

AbadieOLSscore <- Abadie %>% 
  mutate(pscore = OLS$fitted.values)

pcontrol2 <- AbadieOLSscore %>% 
  filter(treat == 0) %>% 
  pull(pscore) %>% 
  mean()

ptreated2 <- AbadieOLSscore %>% 
  filter(treat == 1) %>% 
  pull(pscore) %>% 
  mean()
```

## C

Distribution of pscores: Logit for Treatment = 0
```{r hist1, echo=FALSE}
Abadielogitscore %>% 
  filter(treat == 0) %>% 
  ggplot() +
  geom_histogram(aes(x = pscore))
```

Distribution of pscores: Logit for Treatment = 1
```{r hist2, echo=FALSE}
Abadielogitscore %>% 
  filter(treat == 1) %>% 
  ggplot() +
  geom_histogram(aes(x = pscore))
```

Max and Min for Logit pscores
```{r table1, echo=FALSE}
Abadielogitscore %>%
  group_by(treat) %>%
  summarize(Max = round(max(pscore),4), Min = round(min(pscore),4)) %>%
  mutate(treat = if_else(treat == 0, "Control", "Treatment"))
```

Distribution of pscores: OLS for "Treament = 0"
```{r hist3, echo=FALSE}
AbadieOLSscore %>% 
  filter(treat == 0) %>% 
  ggplot() +
  geom_histogram(aes(x = pscore))
```

Distribution of pscores: OLS for "Treatment = 1"
```{r hist4, echo=FALSE}
AbadieOLSscore %>% 
  filter(treat == 1) %>% 
  ggplot() +
  geom_histogram(aes(x = pscore))
```

Max and Min for OLS pscores
```{r table2, echo=FALSE}
AbadieOLSscore %>%
  group_by(treat) %>%
  summarize(Max = round(max(pscore),4), Min = round(min(pscore),4)) %>%
  mutate(treat = if_else(treat == 0, "Control", "Treatment"))
```

## D

Max and Min pscores for filtered Logit
```{r table3, echo=FALSE}
Abadielogitscore %>% filter(between(pscore, 0.1, 0.9)) %>%
  group_by(treat) %>%
  summarize(Max = round(max(pscore),4), Min = round(min(pscore),4)) %>%
  mutate(treat = if_else(treat == 0, "Control", "Treatment"))
```

Filtered Logit pscore distribution for "Treament = 0"
```{r hist5, echo=FALSE}
Abadielogitscore %>% filter(between(pscore, 0.1, 0.9)) %>%
  filter(treat == 0) %>% 
  ggplot() +
  geom_histogram(aes(x = pscore))
```

Filtered Logit pscore distribution for "Treament = 1"
```{r hist6, echo=FALSE}
Abadielogitscore %>% filter(between(pscore, 0.1, 0.9)) %>%
  filter(treat == 1) %>% 
  ggplot() +
  geom_histogram(aes(x = pscore))
```

Max and Min pscores for filtered OLS
```{r table4, echo=FALSE}
AbadieOLSscore %>% filter(between(pscore, 0.1, 0.9)) %>%
  group_by(treat) %>%
  summarize(Max = round(max(pscore),4), Min = round(min(pscore),4)) %>%
  mutate(treat = if_else(treat == 0, "Control", "Treatment"))

```

Filtered OLS pscore distribution for "Treament = 0"
```{r hist7, echo=FALSE}
AbadieOLSscore %>% filter(between(pscore, 0.1, 0.9)) %>%
  filter(treat == 0) %>% 
  ggplot() +
  geom_histogram(aes(x = pscore))
```

Filtered Logit pscore distribution for "Treament = 1"
```{r hist8, echo=FALSE}
AbadieOLSscore %>% filter(between(pscore, 0.1, 0.9)) %>%
  filter(treat == 1) %>% 
  ggplot() +
  geom_histogram(aes(x = pscore))
```

#2

Looking at the difference in real earnings the between treatment and control groups using the Logit model on the unfiltered dataset:
```{r setup1, include=FALSE}
mean1 <- Abadielogitscore %>% 
  filter(treat == 1) %>% 
  pull(re78) %>% 
  mean()

Abadie$y1 <- mean1

mean0 <- Abadielogitscore %>% 
  filter(treat == 0) %>% 
  pull(re78) %>% 
  mean()

Abadie$y0 <- mean0

logitdifference_untreated <- unique(Abadie$y1 - Abadie$y0)
```
```{r}
summary(logitdifference_untreated)
```

When doing the same for the OLS model:
```{r setup3, include=FALSE}
meana <- AbadieOLSscore %>% 
  filter(treat == 1) %>% 
  pull(re78) %>% 
  mean()

Abadie$y1 <- meana

meanb <- AbadieOLSscore %>% 
  filter(treat == 0) %>% 
  pull(re78) %>% 
  mean()

Abadie$y0 <- meanb

OLSdifference_untreated <- unique(Abadie$y1 - Abadie$y0)
```
```{r}
summary(OLSdifference_untreated)
```

# 3

Using the weighted

```{r}
N <- nrow(Abadielogitscore)

Abadielogitscore <- Abadielogitscore %>% 
  mutate(d1 = treat/pscore,
         d0 = (1-treat)/(1-pscore))

s1 <- sum(Abadielogitscore$d1)
s0 <- sum(Abadielogitscore$d0)


Abadielogitscore <- Abadielogitscore %>% 
  mutate(y1 = treat * re78/pscore,
         y0 = (1-treat) * re78/(1-pscore),
         ht = y1 - y0)

Abadielogitscore %>% 
  pull(ht) %>% 
  mean()


#- Manual with normalized weights
Abadielogitscore <- Abadielogitscore %>% 
  mutate(y1 = (treat*re78/pscore)/(s1/N),
         y0 = ((1-treat)*re78/(1-pscore))/(s0/N),
         norm = y1 - y0)
Abadielogitscore <- Abadielogitscore %>% 
  mutate(y1 = treat * re78/pscore,
         y0 = (1-treat) * re78/(1-pscore),
         ht = y1 - y0)

Abadielogitscore %>% 
  pull(ht) %>% 
  mean()

Abadielogitscore %>% 
  pull(norm) %>% 
  mean()

Abadielogitscore <- Abadielogitscore %>% 
  select(-d1, -d0, -y1, -y0, -ht, -norm) %>% 
  filter(!(pscore >= 0.9)) %>% 
  filter(!(pscore <= 0.1))


N <- nrow(Abadielogitscore)
#- Manual with non-normalized weights using all data
Abadielogitscore <- Abadielogitscore %>% 
  mutate(d1 = treat/pscore,
         d0 = (1-treat)/(1-pscore))

s1 <- sum(Abadielogitscore$d1)
s0 <- sum(Abadielogitscore$d0)


Abadielogitscore <- Abadielogitscore %>% 
  mutate(y1 = treat * re78/pscore,
         y0 = (1-treat) * re78/(1-pscore),
         ht = y1 - y0)

Abadielogitscore <- Abadielogitscore %>% 
  mutate(y1 = (treat*re78/pscore)/(s1/N),
         y0 = ((1-treat)*re78/(1-pscore))/(s0/N),
         norm = y1 - y0)


Abadielogitscore %>% 
  pull(ht) %>% 
  mean()

Abadielogitscore %>% 
  pull(norm) %>% 
  mean()

mean1 <- Abadielogitscore %>% 
  filter(treat == 1) %>% 
  pull(re78) %>% 
  mean()

Abadie$y1 <- mean1

mean0 <- Abadielogitscore %>% 
  filter(treat == 0) %>% 
  pull(re78) %>% 
  mean()

Abadie$y0 <- mean0

ate3 <- unique(Abadie$y1 - Abadie$y0)

summary(ate3)

```
  


Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
